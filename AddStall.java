/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bse_oop2_2025;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author jonah
 */
public class AddStall extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(AddStall.class.getName());

    /**
     * Creates new form AddStall
     */
    public AddStall() {
        initComponents();
         setupSectionComboBox();
}

private void setupSectionComboBox() {
    
    cmboxsection.removeAllItems(); 
    cmboxsection.addItem("Food");
    cmboxsection.addItem("Clothing");
    cmboxsection.addItem("Electronics");
    cmboxsection.addItem("Household");
    cmboxsection.addItem("Beauty");
    cmboxsection.addItem("Shoes");
    cmboxsection.addItem("Books");
    cmboxsection.setSelectedIndex(0);

    }
    public Connection getConnection() {
    try {
        String url = "jdbc:mysql://localhost:3306/market_vendor_db";
        String username = "root";
        String password = "Jonah@1170";
        
        Connection conn = DriverManager.getConnection(url, username, password);
        return conn;
    } catch (Exception e) {
        System.out.println("Database connection error: " + e.getMessage());
        return null;
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbstallmanagement = new javax.swing.JLabel();
        txtstallnumber = new javax.swing.JTextField();
        lbsection = new javax.swing.JLabel();
        cmboxsection = new javax.swing.JComboBox<>();
        lbmonthlyrent = new javax.swing.JLabel();
        txtmonthlyrent = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbstallmanagement.setText("Stall Number");

        lbsection.setText("section");

        cmboxsection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmboxsection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxsectionActionPerformed(evt);
            }
        });

        lbmonthlyrent.setText("Monthly Rent");

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btncancel.setText("Cancel");

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnsave)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbstallmanagement)
                        .addComponent(lbsection)
                        .addComponent(lbmonthlyrent)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnupdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(btndelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btncancel)
                                .addGap(21, 21, 21))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cmboxsection, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtstallnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtmonthlyrent, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbstallmanagement)
                    .addComponent(txtstallnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbsection)
                    .addComponent(cmboxsection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbmonthlyrent)
                    .addComponent(txtmonthlyrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave)
                    .addComponent(btncancel)
                    .addComponent(btnupdate)
                    .addComponent(btndelete))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        
    String stallNumber = txtstallnumber.getText().trim(); 
    String section = cmboxsection.getSelectedItem().toString(); 
    String rentText = txtmonthlyrent.getText().trim(); 
    
    
    if (stallNumber.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter stall number!");
        txtstallnumber.requestFocus();
        return;
    }
    
    if (rentText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter monthly rent!");
        txtmonthlyrent.requestFocus();
        return;
    }
    
    
    if (!stallNumber.matches("[A-Za-z][0-9]+")) {
        JOptionPane.showMessageDialog(this, "Stall number should be like: A01, B15, C03!");
        txtstallnumber.requestFocus();
        return;
    }
    
    
    double rent;
    try {
        rent = Double.parseDouble(rentText);
        if (rent <= 0) {
            JOptionPane.showMessageDialog(this, "Rent amount must be greater than 0!");
            txtstallnumber.requestFocus();
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid rent amount!");
        txtmonthlyrent.requestFocus();
        return;
    }
    
    
    try {
        Connection conn = getConnection();
        if (conn != null) {
            
            String checkSql = "SELECT * FROM stalls WHERE stall_number = ?";
            PreparedStatement checkPst = conn.prepareStatement(checkSql);
            checkPst.setString(1, stallNumber.toUpperCase());
            ResultSet rs = checkPst.executeQuery();
            
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Stall number already exists! Please use a different number.");
                txtstallnumber.setText("");
                txtstallnumber.requestFocus();
                return;
            }
            
            
            String sql = "INSERT INTO stalls (stall_number, section, monthly_rent, status) VALUES (?, ?, ?, 'Available')";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, stallNumber.toUpperCase());
            pst.setString(2, section);
            pst.setDouble(3, rent);
            
            int result = pst.executeUpdate();
            
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Stall added successfully!");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add stall. Please try again.");
            }
            
            conn.close();
        } else {
            JOptionPane.showMessageDialog(this, "Database connection failed!");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error saving stall: " + ex.getMessage());
    }

    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Update functionality - use Edit Stall form instead!");

    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        String stallNumber = txtstallnumber.getText().trim(); 
    
    if (stallNumber.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter stall number to delete!");
        return;
    }
    
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to delete stall " + stallNumber + "?", 
        "Confirm Delete", 
        JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        
            try (Connection conn = getConnection()) {
                String sql = "DELETE FROM stalls WHERE stall_number = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, stallNumber.toUpperCase());
                
                int result = pst.executeUpdate();
                
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Stall deleted successfully!");
                    clearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "Stall not found or failed to delete!");
                }
            } catch (SQLException ex) {
                System.getLogger(AddStall.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
        
      }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void cmboxsectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboxsectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmboxsectionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AddStall().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cmboxsection;
    private javax.swing.JLabel lbmonthlyrent;
    private javax.swing.JLabel lbsection;
    private javax.swing.JLabel lbstallmanagement;
    private javax.swing.JTextField txtmonthlyrent;
    private javax.swing.JTextField txtstallnumber;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
