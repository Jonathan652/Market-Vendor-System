/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bse_oop2_2025;
import static bse_oop2_2025.DbConnection.getConnection;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jonah
 */
public class StallManagement extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(StallManagement.class.getName());

    /**
     * Creates new form StallManagement
     */
    public StallManagement() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("StallManagement");
        loadStalls();
         setupTable();
    }
    private void setupTable() {
        
        tblstalls.setRowHeight(25); 
        tblstalls.setGridColor(java.awt.Color.LIGHT_GRAY);
        tblstalls.setSelectionBackground(new java.awt.Color(184, 207, 229));
    }
    
    

   public void loadStalls() {
    try {
        try (Connection conn = getConnection()) {
            String sql = "SELECT * FROM stalls ORDER BY stall_number";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            
            DefaultTableModel model = (DefaultTableModel) tblstalls.getModel();
            model.setRowCount(0); 
            
            
            model.setColumnIdentifiers(new Object[]{"Stall Number", "Section", "Monthly Rent", "Status"});
            
            while (rs.next()) {
                Object[] row = {
                    rs.getString("stall_number"),
                    rs.getString("section"),
                    "UGX " + rs.getDouble("monthly_rent"),
                    rs.getString("status")
                };
                model.addRow(row);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading stalls: " + e.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbstalls = new javax.swing.JLabel();
        btnaddnewStall = new javax.swing.JButton();
        btneditstall = new javax.swing.JButton();
        btnassignstall = new javax.swing.JButton();
        btnviewassignment = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblstalls = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbstalls.setText("Stalls");

        btnaddnewStall.setText("Add New Stall");
        btnaddnewStall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddnewStallActionPerformed(evt);
            }
        });

        btneditstall.setText("Edit Stall");
        btneditstall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditstallActionPerformed(evt);
            }
        });

        btnassignstall.setText("Assign stall");
        btnassignstall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnassignstallActionPerformed(evt);
            }
        });

        btnviewassignment.setText("View Assignments");
        btnviewassignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewassignmentActionPerformed(evt);
            }
        });

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        tblstalls.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblstalls);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbstalls)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnviewassignment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnback)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnaddnewStall)
                    .addComponent(btneditstall)
                    .addComponent(btnassignstall))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(lbstalls))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(btnaddnewStall)
                .addGap(38, 38, 38)
                .addComponent(btneditstall)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnassignstall)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnviewassignment)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnback)
                        .addGap(97, 97, 97))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddnewStallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddnewStallActionPerformed
        this.setVisible(false);
    new AddStall().setVisible(true);
    }//GEN-LAST:event_btnaddnewStallActionPerformed

    private void btnassignstallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnassignstallActionPerformed
       this.setVisible(false);
    new StallAssignment().setVisible(true);
    }//GEN-LAST:event_btnassignstallActionPerformed

    private void btneditstallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditstallActionPerformed
        
    int selectedRow = tblstalls.getSelectedRow(); // Replace with your table name
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a stall to edit!");
        return;
    }
    
    String stallNumber = (String) tblstalls.getValueAt(selectedRow, 0);
    
    // Get stall ID from database
    try {
        try (Connection conn = getConnection()) {
            String sql = "SELECT stall_id FROM stalls WHERE stall_number = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, stallNumber);
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                this.setVisible(false);
                new AddStall().setVisible(true);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }

    }//GEN-LAST:event_btneditstallActionPerformed

    private void btnviewassignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewassignmentActionPerformed
        try {
            try (Connection conn = DbConnection.getConnection()) {
                String sql = "SELECT s.stall_number, CONCAT(v.first_name, ' ', v.last_name) AS vendor_name, " +
                        "sa.assignment_date, sa.status " +
                        "FROM stall_assignments sa " +
                        "JOIN stalls s ON sa.stall_id = s.stall_id " +
                        "JOIN vendors v ON sa.vendor_id = v.vendor_id " +
                        "WHERE sa.status = 'Active'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                
                String assignments = "CURRENT STALL ASSIGNMENTS:\n";
                assignments += "=====================================\n";
                assignments += "Stall No. | Vendor Name | Assignment Date\n";
                assignments += "-------------------------------------\n";
                
                while (rs.next()) {
                    assignments += rs.getString("stall_number") + " | " +
                            rs.getString("vendor_name") + " | " +
                            rs.getDate("assignment_date") + "\n";
                }
                
                if (assignments.equals("CURRENT STALL ASSIGNMENTS:\n=====================================\nStall No. | Vendor Name | Assignment Date\n-------------------------------------\n")) {
                    assignments += "No active assignments found.";
                }
                
                JOptionPane.showMessageDialog(this, assignments, "Stall Assignments", JOptionPane.INFORMATION_MESSAGE);
            }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error viewing assignments: " + e.getMessage());
    }

    }//GEN-LAST:event_btnviewassignmentActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        this.setVisible(false);
    new MainDashBoard().setVisible(true);
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new StallManagement().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddnewStall;
    private javax.swing.JButton btnassignstall;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btneditstall;
    private javax.swing.JButton btnviewassignment;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbstalls;
    private javax.swing.JTable tblstalls;
    // End of variables declaration//GEN-END:variables
}
