/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bse_oop2_2025;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author jonah
 */
public class User_login extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(User_login.class.getName());
      
    /**
     * Creates new form User_login
     */
    public User_login() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Login Frame");
        
    }


   private void checkLogin() {
    String username = txtusername.getText(); 
    
    String  password = psd.getText();
    
    if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter username and password!");
        return;
    }
    
    try {
        Connection conn = DbConnection.getConnection();
        if (conn != null) {
            String sql = "SELECT * FROM users WHERE username = ? AND password = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, username);
            pst.setString(2, password);
            
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Login successful!");
                this.setVisible(false);
                new MainDashBoard().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid username or password!");
                txtusername.setText("");
                psd.setText("");
            }
            conn.close();
        } else {
            JOptionPane.showMessageDialog(this, "Database connection failed!");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
    }
    public void createNewAccount() {
    String username = txtusername.getText(); 
    String password = psd.getText(); 
    
    if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter username and password to create account!");
        return;
    }
    
    if (username.length() < 3) {
        JOptionPane.showMessageDialog(this, "Username must be at least 3 characters!");
        return;
    }
    
    if (password.length() < 4) {
        JOptionPane.showMessageDialog(this, "Password must be at least 4 characters!");
        return;
    }
    
    try {
        Connection conn = DbConnection.getConnection();
        if (conn != null) {
            
            String checkSql = "SELECT * FROM users WHERE username = ?";
            PreparedStatement checkPst = conn.prepareStatement(checkSql);
            checkPst.setString(1, username);
            ResultSet rs = checkPst.executeQuery();
            
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Username already exists! Choose a different one.");
                txtusername.setText("");
                return;
            }
            
           
            String fullName = JOptionPane.showInputDialog(this, "Enter your full name:");
            if (fullName == null || fullName.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Full name is required!");
                return;
            }
            
           
            String insertSql = "INSERT INTO users (username, password, full_name, role) VALUES (?, ?, ?, 'User')";
            PreparedStatement insertPst = conn.prepareStatement(insertSql);
            insertPst.setString(1, username);
            insertPst.setString(2, password);
            insertPst.setString(3, fullName.trim());
            
            int result = insertPst.executeUpdate();
            
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Account created successfully! You can now login.");
                txtusername.setText("");
                psd.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to create account. Please try again.");
            }
            
            conn.close();
        } else {
            JOptionPane.showMessageDialog(this, "Database connection failed!");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error creating account: " + ex.getMessage());
    }

}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbusername = new javax.swing.JLabel();
        lbpassword = new javax.swing.JLabel();
        btnlogin = new javax.swing.JButton();
        btncreate = new javax.swing.JButton();
        txtusername = new javax.swing.JTextField();
        psd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbusername.setText("Username");

        lbpassword.setText("Password");

        btnlogin.setText("Login");
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });

        btncreate.setText("Create new");
        btncreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateActionPerformed(evt);
            }
        });

        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnlogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                        .addComponent(btncreate)
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbpassword)
                            .addComponent(lbusername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(psd, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbusername)
                    .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbpassword)
                    .addComponent(psd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlogin)
                    .addComponent(btncreate))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed
       checkLogin();
    }//GEN-LAST:event_btnloginActionPerformed

    private void btncreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateActionPerformed
        createNewAccount();
    }//GEN-LAST:event_btncreateActionPerformed

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusernameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new User_login().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncreate;
    private javax.swing.JButton btnlogin;
    private javax.swing.JLabel lbpassword;
    private javax.swing.JLabel lbusername;
    private javax.swing.JPasswordField psd;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
