/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bse_oop2_2025;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;

/**
 *
 * @author jonah
 */
public class FeeCollection extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FeeCollection.class.getName());

    /**
     * Creates new form FeeCollection
     */
    public FeeCollection() {
        initComponents();
        loadVendors();
        loadTodaysFees();
        calculateTotals(); 
    
    
    txtfee.setText("1000"); 


    }
    public void loadVendors() {
    try {
        Connection conn = DbConnection.getConnection();
        String sql = "SELECT vendor_id, CONCAT(first_name, ' ', last_name) AS vendor_name FROM vendors WHERE status = 'Active'";
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        
        cmbvendor.removeAllItems(); 
        cmbvendor.addItem("Select Vendor");
        
        while (rs.next()) {
            String item = rs.getInt("vendor_id") + " - " + rs.getString("vendor_name");
            cmbvendor.addItem(item);
        }
        
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading vendors: " + e.getMessage());
    }
}
    public void loadTodaysFees() {
    try {
        Connection conn = DbConnection.getConnection();
        
        
        
        conn.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error loading fees: " + e.getMessage());
    }
}
    public void calculateTotals() {
    try {
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "SELECT " +
                    "SUM(CASE WHEN payment_status = 'Paid' THEN amount ELSE 0 END) AS total_collected, " +
                    "SUM(CASE WHEN payment_status = 'Pending' THEN amount ELSE 0 END) AS total_pending " +
                    "FROM daily_fees WHERE fee_date = CURDATE()";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            if (rs.next()) {
                double totalCollected = rs.getDouble("total_collected");
                double totalPending = rs.getDouble("total_pending");
                
                lbCollected.setText("Total Collected: UGX " + totalCollected); 
                lbpending.setText("Total Pending: UGX " + totalPending); 
            }
        }
    } catch (SQLException e) {
        System.out.println("Error calculating totals: " + e.getMessage());
    }
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbdate = new javax.swing.JLabel();
        txtdate = new javax.swing.JTextField();
        lbvendor = new javax.swing.JButton();
        cmbvendor = new javax.swing.JComboBox<>();
        lbfee = new javax.swing.JLabel();
        btngeneratefee = new javax.swing.JButton();
        lbpending = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstpending = new javax.swing.JList<>();
        btnviewpayments = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        lbCollected = new javax.swing.JLabel();
        txtfee = new javax.swing.JTextField();
        txtcollected = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbdate.setText("Date");

        txtdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdateActionPerformed(evt);
            }
        });

        lbvendor.setText("Vendor");

        cmbvendor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbvendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbvendorActionPerformed(evt);
            }
        });

        lbfee.setText("Fee");

        btngeneratefee.setText("Generate Fee");
        btngeneratefee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngeneratefeeActionPerformed(evt);
            }
        });

        lbpending.setText("Pending");

        lstpending.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstpending);

        btnviewpayments.setText("View Payments");

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        lbCollected.setText(" Collected");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btndelete)
                .addGap(115, 115, 115)
                .addComponent(btnback)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbvendor)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(lbfee))
                            .addComponent(lbdate)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCollected)
                            .addComponent(lbpending))))
                .addGap(339, 339, 339)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbvendor, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfee, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcollected, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(354, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(btngeneratefee))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(btnviewpayments)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(lbdate)
                        .addGap(27, 27, 27)
                        .addComponent(lbvendor)
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbfee)
                            .addComponent(txtfee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbvendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btngeneratefee)
                .addGap(29, 29, 29)
                .addComponent(txtcollected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(lbCollected)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lbpending))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnviewpayments)
                .addGap(164, 164, 164)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnback)
                    .addComponent(btndelete))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btngeneratefeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngeneratefeeActionPerformed
        // TODO add your handling code here:
         if (cmbvendor.getSelectedIndex() == 0) { // Replace with your combo box name
        JOptionPane.showMessageDialog(this, "Please select a vendor!");
        return;
    }
    
    String amountText = txtfee.getText().trim(); 
    if (amountText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter fee amount!");
        return;
    }
    
    try {
        double amount = Double.parseDouble(amountText);
        String vendorInfo = cmbvendor.getSelectedItem().toString();
        int vendorId = Integer.parseInt(vendorInfo.split(" - ")[0]);
        
        Connection conn = DbConnection.getConnection();
        String sql = "INSERT INTO daily_fees (vendor_id, fee_date, amount, payment_status) VALUES (?, ?, ?, 'Pending')";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setInt(1, vendorId);
        pst.setDate(2, java.sql.Date.valueOf(LocalDate.now()));
        pst.setDouble(3, amount);
        
        int result = pst.executeUpdate();
        
        if (result > 0) {
            JOptionPane.showMessageDialog(this, "Fee generated successfully!");
            txtfee.setText("1000"); 
            cmbvendor.setSelectedIndex(0);
            loadTodaysFees(); 
        }
        
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    
    }//GEN-LAST:event_btngeneratefeeActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    new MainDashBoard().setVisible(true);

    }//GEN-LAST:event_btnbackActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        
    int feeId = 0; 
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to delete this fee?", 
        "Confirm Delete", 
        JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            try (Connection conn = DbConnection.getConnection()) {
                String sql = "DELETE FROM daily_fees WHERE fee_id = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, feeId);
                
                int result = pst.executeUpdate();
                
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Fee deleted successfully!");
                    loadTodaysFees(); // Refresh table
                }
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Error deleting fee: " + e.getMessage());
        }
    }

    }//GEN-LAST:event_btndeleteActionPerformed

    private void cmbvendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbvendorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbvendorActionPerformed

    private void txtdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FeeCollection().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btngeneratefee;
    private javax.swing.JButton btnviewpayments;
    private javax.swing.JComboBox<String> cmbvendor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCollected;
    private javax.swing.JLabel lbdate;
    private javax.swing.JLabel lbfee;
    private javax.swing.JLabel lbpending;
    private javax.swing.JButton lbvendor;
    private javax.swing.JList<String> lstpending;
    private javax.swing.JTextField txtcollected;
    private javax.swing.JTextField txtdate;
    private javax.swing.JTextField txtfee;
    // End of variables declaration//GEN-END:variables

    
}
